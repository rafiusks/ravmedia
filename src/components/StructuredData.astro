---
interface Props {
	type?: "organization" | "website" | "service";
	page?: string;
}

const { type = "organization", page } = Astro.props;

const baseUrl = Astro.site?.toString() || "https://ravmedia.dev";

const organizationData = {
	"@context": "https://schema.org",
	"@type": "Organization",
	name: "RavMedia",
	description:
		"Enterprise software solutions and digital transformation services",
	url: baseUrl,
	logo: `${baseUrl}/logo.jpg`,
	image: `${baseUrl}/social-image.jpg`,
	contactPoint: {
		"@type": "ContactPoint",
		email: "contact@ravmedia.dev",
		contactType: "Customer Service",
		areaServed: "Worldwide",
		availableLanguage: "English",
	},
	address: {
		"@type": "PostalAddress",
		addressCountry: "US",
	},
	sameAs: [
		"https://www.linkedin.com/in/rafvidal/",
		"https://github.com/rafiusks",
	],
	foundingDate: "2014",
	numberOfEmployees: "1-10",
	industry: "Software Development",
};

const websiteData = {
	"@context": "https://schema.org",
	"@type": "WebSite",
	name: "RavMedia",
	description:
		"Enterprise software solutions and digital transformation services",
	url: baseUrl,
	potentialAction: {
		"@type": "SearchAction",
		target: {
			"@type": "EntryPoint",
			urlTemplate: `${baseUrl}/search?q={search_term_string}`,
		},
		"query-input": "required name=search_term_string",
	},
};

const serviceData = {
	"@context": "https://schema.org",
	"@type": "ProfessionalService",
	name: "RavMedia Enterprise Software Solutions",
	description:
		"Comprehensive enterprise software solutions including legacy system modernization, cloud-native development, data engineering, and API integration services",
	provider: {
		"@type": "Organization",
		name: "RavMedia",
	},
	areaServed: "Worldwide",
	hasOfferCatalog: {
		"@type": "OfferCatalog",
		name: "Software Development Services",
		itemListElement: [
			{
				"@type": "Offer",
				itemOffered: {
					"@type": "Service",
					name: "Legacy System Modernization",
					description:
						"Upgrade outdated systems to modern, scalable architectures",
				},
			},
			{
				"@type": "Offer",
				itemOffered: {
					"@type": "Service",
					name: "Cloud-Native Development",
					description:
						"Build and deploy applications that leverage the full potential of the cloud",
				},
			},
			{
				"@type": "Offer",
				itemOffered: {
					"@type": "Service",
					name: "Data Engineering & Analytics",
					description:
						"Transform data into actionable insights with robust data pipelines and analytics solutions",
				},
			},
		],
	},
};

let structuredData: any;
switch (type) {
	case "website":
		structuredData = websiteData;
		break;
	case "service":
		structuredData = serviceData;
		break;
	default:
		structuredData = organizationData;
}

// Add breadcrumbs for non-home pages
if (page && page !== "/") {
	const breadcrumbData = {
		"@context": "https://schema.org",
		"@type": "BreadcrumbList",
		itemListElement: [
			{
				"@type": "ListItem",
				position: 1,
				name: "Home",
				item: baseUrl,
			},
			{
				"@type": "ListItem",
				position: 2,
				name: page.charAt(1).toUpperCase() + page.slice(2),
				item: `${baseUrl}${page}`,
			},
		],
	};

	structuredData = [structuredData, breadcrumbData];
}
---

<script type="application/ld+json" set:html={JSON.stringify(structuredData)} /> 